{
    "polygon2d": {
        "accumulated_batches": 1,
        "amp_config": {
            "enable_amp": false,
            "keep_batchnorm_fp32": true,
            "opt_level": "O1"
        },
        "base_lr": 0.001,
        "best_weights_name": "polygon2d_best.pt",
        "clip_grad_config": {
            "enable_clip": false,
            "max_norm": 20
        },
        "data": {
            "data_channel": 3,
            "image_size": [
                640,
                640
            ],
            "mean": [
                0.485,
                0.456,
                0.406
            ],
            "normalize_type": -1,
            "resize_type": 4,
            "std": [
                0.229,
                0.224,
                0.225
            ]
        },
        "detect2d_class": [
            "others"
        ],
        "display": 20,
        "evaluation": {
            "iou_constraint": 0.5,
            "type": "OCRDetectionMetric"
        },
        "freeze_bn_layer_name": "route_0",
        "freeze_bn_type": 0,
        "freeze_layer_name": "baseNet_0",
        "freeze_layer_type": 0,
        "is_save_epoch_model": false,
        "latest_optimizer_name": "polygon2d_optimizer.pt",
        "latest_weights_name": "polygon2d_latest.pt",
        "lr_scheduler_config": {
            "type": "CosineLR",
            "warmup_iters": 5,
            "warmup_type": 2
        },
        "max_epochs": 500,
        "model_config": {
            "class_number": 1,
            "data_channel": 3,
            "type": "dbnet"
        },
        "model_type": 0,
        "optimizer_config": {
            "0": {
                "type": "Adam",
                "weight_decay": 0.0001
            }
        },
        "post_process": {
            "mask_threshold": 0.3,
            "threshold": 0.7,
            "type": "DBPostProcess",
            "unclip_ratio": 1.5
        },
        "sparse_config": {
            "enable_sparse": false,
            "sparse_lr": 1e-05
        },
        "train_data": {
            "dataloader": {
                "batch_size": 16,
                "collate_fn": {
                    "target_type": 0,
                    "type": "DetOCRDataSetCollate"
                },
                "drop_last": false,
                "num_workers": 0,
                "shuffle": true,
                "type": "DataLoader"
            },
            "dataset": {
                "data_channel": 3,
                "image_size": [
                    640,
                    640
                ],
                "is_augment": true,
                "language": [
                    "english"
                ],
                "mean": [
                    0.485,
                    0.456,
                    0.406
                ],
                "normalize_type": -1,
                "resize_type": 4,
                "std": [
                    0.229,
                    0.224,
                    0.225
                ],
                "type": "DetOCRDataSet"
            }
        },
        "val_data": {
            "dataloader": {
                "batch_size": 1,
                "collate_fn": {
                    "target_type": 1,
                    "type": "DetOCRDataSetCollate"
                },
                "drop_last": false,
                "num_workers": 0,
                "shuffle": false,
                "type": "DataLoader"
            },
            "dataset": {
                "data_channel": 3,
                "image_size": [
                    736,
                    736
                ],
                "is_augment": false,
                "language": [
                    "english"
                ],
                "mean": [
                    0.485,
                    0.456,
                    0.406
                ],
                "normalize_type": -1,
                "resize_type": 4,
                "std": [
                    0.229,
                    0.224,
                    0.225
                ],
                "type": "DetOCRDataSet"
            }
        }
    },
    "rec_text": {
        "accumulated_batches": 1,
        "amp_config": {
            "enable_amp": false,
            "keep_batchnorm_fp32": true,
            "opt_level": "O1"
        },
        "base_lr": 0.001,
        "best_weights_name": "rec_text_best.pt",
        "character_count": 6625,
        "character_set": "/home/lpj/github/easy_ai/easyai/config/task/../character/zh_en.txt",
        "clip_grad_config": {
            "enable_clip": false,
            "max_norm": 5
        },
        "data": {
            "data_channel": 3,
            "image_size": [
                128,
                32
            ],
            "mean": [
                0.5,
                0.5,
                0.5
            ],
            "normalize_type": 2,
            "resize_type": 3,
            "std": [
                0.5,
                0.5,
                0.5
            ]
        },
        "display": 20,
        "evaluation": {
            "type": "RecognizeTextMetric"
        },
        "freeze_bn_layer_name": "baseNet_0",
        "freeze_bn_type": 0,
        "freeze_layer_name": "baseNet_0",
        "freeze_layer_type": 0,
        "is_save_epoch_model": false,
        "latest_optimizer_name": "rec_text_optimizer.pt",
        "latest_weights_name": "rec_text_latest.pt",
        "lr_scheduler_config": {
            "lr_stages": [
                [
                    50,
                    1
                ],
                [
                    70,
                    0.1
                ],
                [
                    100,
                    0.01
                ]
            ],
            "type": "MultiStageLR",
            "warmup_iters": 5,
            "warmup_type": 2
        },
        "max_epochs": 100,
        "model_type": 0,
        "optimizer_config": {
            "0": {
                "type": "Adam",
                "weight_decay": 0.0001
            }
        },
        "post_process": {
            "type": "CTCPostProcess"
        },
        "train_data": {
            "dataloader": {
                "batch_size": 64,
                "collate_fn": {
                    "padding_type": 1,
                    "target_type": 0,
                    "type": "RecTextDataSetCollate"
                },
                "drop_last": false,
                "num_workers": 0,
                "shuffle": true,
                "type": "DataLoader"
            },
            "dataset": {
                "char_path": "/home/lpj/github/easy_ai/easyai/config/task/../character/zh_en.txt",
                "data_channel": 3,
                "image_size": [
                    128,
                    32
                ],
                "is_augment": true,
                "language": [
                    "english"
                ],
                "max_text_length": 32,
                "mean": [
                    0.5,
                    0.5,
                    0.5
                ],
                "normalize_type": 2,
                "resize_type": 3,
                "std": [
                    0.5,
                    0.5,
                    0.5
                ],
                "type": "RecTextDataSet"
            }
        },
        "val_data": {
            "dataloader": {
                "batch_size": 1,
                "collate_fn": {
                    "padding_type": 1,
                    "target_type": 0,
                    "type": "RecTextDataSetCollate"
                },
                "drop_last": false,
                "num_workers": 0,
                "shuffle": false,
                "type": "DataLoader"
            },
            "dataset": {
                "char_path": "/home/lpj/github/easy_ai/easyai/config/task/../character/zh_en.txt",
                "data_channel": 3,
                "image_size": [
                    128,
                    32
                ],
                "is_augment": false,
                "language": [
                    "english"
                ],
                "max_text_length": 32,
                "mean": [
                    0.5,
                    0.5,
                    0.5
                ],
                "normalize_type": 2,
                "resize_type": 3,
                "std": [
                    0.5,
                    0.5,
                    0.5
                ],
                "type": "RecTextDataSet"
            }
        }
    }
}